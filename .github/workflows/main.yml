name: artificial_insentience
on: [push]

jobs:
  job:
    name: ${{ matrix.os }}-build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: windows-latest
            torchInstallDir: C:/libtorch/
            triplet: x64-windows-static
            vcpkgRoot: C:/vcpkg
          - os: ubuntu-latest
            torchInstallDir: /tmp/libtorch
            triplet: x64-linux
            vcpkgRoot: /usr/local/share/vcpkg
    steps:
      - uses: actions/checkout@v2
      - name: Checkout submodules
        run: |
          git submodule sync --recursive
          git submodule update --init --recursive
      - name: Install apt dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
          sudo apt-get install -y libxrandr-dev libxinerama-dev libx11-dev libxcursor-dev libxi-dev freeglut3-dev libasound2-dev g++-9
      - uses: actions/cache@v1
        name: Vcpkg cache
        with:
          path: ${{ matrix.vcpkgRoot }}/
          key: ${{ matrix.os }}-vcpkg-${{ hashFiles('**') }}
          restore-keys: ${{ matrix.os }}-vcpkg-
      - name: Vcpkg
        run: vcpkg install --triplet ${{ matrix.triplet }} curlpp opengl
      - name: Install PyTorch on Linnux
        if: matrix.os == 'ubuntu-latest'
        run: |
          wget https://download.pytorch.org/libtorch/cpu/libtorch-shared-with-deps-1.3.0%2Bcpu.zip -O /tmp/libtorch.zip
          unzip /tmp/libtorch.zip -d /tmp/
      - name: Install PyTorch on Windows
        if: matrix.os == 'windows-latest'
        run: |
          curl -fsS -o libtorch.zip https://download.pytorch.org/libtorch/cpu/libtorch-win-shared-with-deps-debug-1.3.0.zip
          7z x libtorch.zip -y -oC:\
          $env:Path += ";C:\libtorch\lib"
      - name: Make build directory
        run: mkdir build
      - uses: actions/cache@v1
        name: Restore build cache
        with:
          path: ${{ matrix.vcpkgRoot }}/packages/
          key: ${{ matrix.os }}-build-${{ hashFiles('build/**') }}
          restore-keys: ${{ matrix.os }}-build-
      - name: Configure
        env:
          CXX: /usr/bin/g++-9
          CC: /usr/bin/gcc-9
        run: |
          cd build
          cmake -DCMAKE_PREFIX_PATH=${{ matrix.torchInstallDir }} -DCMAKE_TOOLCHAIN_FILE=${{ matrix.vcpkgRoot }}/scripts/buildsystems/vcpkg.cmake -DVCPKG_TARGET_TRIPLET=${{ matrix.triplet }} ..
      - name: Build
        run: |
          cd build
          cmake --build .
