name: artificial_insentience
on: [push]

jobs:
  job:
    name: ${{ matrix.os }}-build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: windows-latest
            torchInstallDir: C:/libtorch/
            triplet: x64-windows-static
          - os: ubuntu-latest
            torchInstallDir: /tmp/libtorch
            triplet: x64-linux
    steps:
      - uses: actions/checkout@v2
      - name: Checkout submodules
        run: |
          git submodule sync --recursive
          git submodule update --init --recursive
      - name: Install apt dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
          sudo apt-get install -y libxrandr-dev libxinerama-dev libx11-dev libxcursor-dev libxi-dev freeglut3-dev libasound2-dev g++-9
      - name: Set vcpkg response file
        uses: lukka/set-shell-env@master
        with:
          VCPKGRESPONSEFILE: ${{ github.workspace }}/reponse_files/vcpkg_${{ matrix.triplet }}.txt
      - name: Run vcpkg
        id: runvcpkg
        uses: lukka/run-vcpkg@v2
        with:
          vcpkgArguments: "@${{ env.VCPKGRESPONSEFILE }}"
          vcpkgDirectory: "${{ github.workspace }}/vcpkg"
          appendedCacheKey: ${{ hashFiles(env.VCPKGRESPONSEFILE) }}
      - name: Install PyTorch on Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          wget https://download.pytorch.org/libtorch/cpu/libtorch-shared-with-deps-1.4.0%2Bcpu.zip -O /tmp/libtorch.zip
          unzip /tmp/libtorch.zip -d /tmp/
      - name: Install PyTorch on Windows
        if: matrix.os == 'windows-latest'
        run: |
          curl -fsS -o libtorch.zip https://download.pytorch.org/libtorch/cpu/libtorch-win-shared-with-deps-debug-1.4.0.zip
          7z x libtorch.zip -y -oC:\
      - name: Configure
        env:
          CXX: /usr/bin/g++-9
          CC: /usr/bin/gcc-9
        shell: bash
        run: |
          mkdir build
          cd build
          cmake \
            -DCMAKE_PREFIX_PATH=${{ matrix.torchInstallDir }} \
            -DCMAKE_TOOLCHAIN_FILE=${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_ROOT_OUT }}/scripts/buildsystems/vcpkg.cmake \
            -DVCPKG_TARGET_TRIPLET=${{ matrix.triplet }} ..
      - name: Build
        run: |
          cd build
          cmake --build .
      - name: Test on Linux
        if: matrix.os == 'ubuntu-latest'
        run: build/artificialinsentience -t
      - name: Test on Windows
        if: matrix.os == 'windows-latest'
        shell: bash
        run: |
          cp C:/libtorch/lib/*.dll build/Debug/
          echo true
